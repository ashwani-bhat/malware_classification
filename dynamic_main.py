
# coding: utf-8

# In[52]:


import numpy as np
import pandas as pd
import os
import json


# In[53]:


# ,'directory_enumerated','file_exists',


# In[54]:

###################### RUN FROM HERE
df = pd.read_csv('dynamicData')
df.info()


# In[37]:


X = df.drop(['malware family'],axis=1)
y = df['malware family']


# In[30]:



from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.10, random_state=4)


# In[18]:


from sklearn.tree import DecisionTreeClassifier
clf = DecisionTreeClassifier()
clf.fit(X_train,y_train)


# In[19]:


# from sklearn import preprocessing
# mm_scaler = preprocessing.StandardScaler()
# X_train = mm_scaler.fit_transform(X_train)
# X_test = mm_scaler.transform(X_test)
# X_train


# In[20]:


from sklearn.metrics import classification_report,confusion_matrix

y_pred = clf.predict(X_test)
cm = confusion_matrix(y_test, y_pred)
print(cm,'\n')
print((cm[0][0]+cm[1][1])/(cm[0][0]+cm[0][1]+cm[1][0]+cm[1][1]),'\n')
print(classification_report(y_test, y_pred))


# In[45]:


import pickle

filename = 'modeldym.sav'
pickle.dump(clf, open(filename, 'wb'))


# In[ ]:




